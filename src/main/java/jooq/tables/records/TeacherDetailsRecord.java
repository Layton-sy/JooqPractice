/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import javax.annotation.processing.Generated;

import jooq.tables.TeacherDetails;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherDetailsRecord extends UpdatableRecordImpl<TeacherDetailsRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 766601391;

    /**
     * Setter for <code>school.teacher_details.teacher_id</code>.
     */
    public void setTeacherId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>school.teacher_details.teacher_id</code>.
     */
    public Integer getTeacherId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>school.teacher_details.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>school.teacher_details.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>school.teacher_details.salary</code>.
     */
    public void setSalary(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>school.teacher_details.salary</code>.
     */
    public Integer getSalary() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TeacherDetails.TEACHER_DETAILS.TEACHER_ID;
    }

    @Override
    public Field<String> field2() {
        return TeacherDetails.TEACHER_DETAILS.ADDRESS;
    }

    @Override
    public Field<Integer> field3() {
        return TeacherDetails.TEACHER_DETAILS.SALARY;
    }

    @Override
    public Integer component1() {
        return getTeacherId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public Integer component3() {
        return getSalary();
    }

    @Override
    public Integer value1() {
        return getTeacherId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public Integer value3() {
        return getSalary();
    }

    @Override
    public TeacherDetailsRecord value1(Integer value) {
        setTeacherId(value);
        return this;
    }

    @Override
    public TeacherDetailsRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public TeacherDetailsRecord value3(Integer value) {
        setSalary(value);
        return this;
    }

    @Override
    public TeacherDetailsRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeacherDetailsRecord
     */
    public TeacherDetailsRecord() {
        super(TeacherDetails.TEACHER_DETAILS);
    }

    /**
     * Create a detached, initialised TeacherDetailsRecord
     */
    public TeacherDetailsRecord(Integer teacherId, String address, Integer salary) {
        super(TeacherDetails.TEACHER_DETAILS);

        set(0, teacherId);
        set(1, address);
        set(2, salary);
    }
}
