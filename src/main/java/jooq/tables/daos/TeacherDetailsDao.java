/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import javax.annotation.processing.Generated;

import jooq.tables.TeacherDetails;
import jooq.tables.records.TeacherDetailsRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherDetailsDao extends DAOImpl<TeacherDetailsRecord, jooq.tables.pojos.TeacherDetails, Integer> {

    /**
     * Create a new TeacherDetailsDao without any configuration
     */
    public TeacherDetailsDao() {
        super(TeacherDetails.TEACHER_DETAILS, jooq.tables.pojos.TeacherDetails.class);
    }

    /**
     * Create a new TeacherDetailsDao with an attached configuration
     */
    public TeacherDetailsDao(Configuration configuration) {
        super(TeacherDetails.TEACHER_DETAILS, jooq.tables.pojos.TeacherDetails.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.TeacherDetails object) {
        return object.getTeacherId();
    }

    /**
     * Fetch records that have <code>teacher_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchRangeOfTeacherId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TeacherDetails.TEACHER_DETAILS.TEACHER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>teacher_id IN (values)</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchByTeacherId(Integer... values) {
        return fetch(TeacherDetails.TEACHER_DETAILS.TEACHER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>teacher_id = value</code>
     */
    public jooq.tables.pojos.TeacherDetails fetchOneByTeacherId(Integer value) {
        return fetchOne(TeacherDetails.TEACHER_DETAILS.TEACHER_ID, value);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(TeacherDetails.TEACHER_DETAILS.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchByAddress(String... values) {
        return fetch(TeacherDetails.TEACHER_DETAILS.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>salary BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchRangeOfSalary(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TeacherDetails.TEACHER_DETAILS.SALARY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>salary IN (values)</code>
     */
    public List<jooq.tables.pojos.TeacherDetails> fetchBySalary(Integer... values) {
        return fetch(TeacherDetails.TEACHER_DETAILS.SALARY, values);
    }
}
